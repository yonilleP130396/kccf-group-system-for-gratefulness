/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package for_gratefullness_group;


import for_gratefullness_group.new_package_1.GRATEFULNESS_DASHBOARD;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author VTMEDICS
 */
public class DASHBOARD_GRATEFULLNESS extends javax.swing.JFrame {

    /**
     * Creates new form DASHBOARD_GRATEFULLNESS
     */
    public DASHBOARD_GRATEFULLNESS() {
        
        initComponents();
        getConnection();
        
        Show_Members_In_JTable();
        getLastNumber();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        javax.swing.JTabbedPane jTabbedPane1 = new javax.swing.JTabbedPane();
        javax.swing.JPanel jPanel3 = new javax.swing.JPanel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        searcforcb = new javax.swing.JComboBox<>();
        refreshtbt = new javax.swing.JButton();
        searchfortf = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        showremarkstb = new javax.swing.JTextArea();
        jLabel24 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        showpositionlb = new javax.swing.JLabel();
        showaddresstf = new javax.swing.JTextField();
        shownametf = new javax.swing.JTextField();
        showcoursetf = new javax.swing.JTextField();
        showidtf = new javax.swing.JTextField();
        showgendertf = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        showmembersamountlb = new javax.swing.JLabel();
        searchbt1 = new javax.swing.JButton();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        cancelbutton = new javax.swing.JButton();
        addbutton = new javax.swing.JButton();
        provincetf = new javax.swing.JTextField();
        barangaytf = new javax.swing.JTextField();
        municipalitytf = new javax.swing.JTextField();
        idtf = new javax.swing.JTextField();
        lastnametf = new javax.swing.JTextField();
        firstnametf = new javax.swing.JTextField();
        middlenametf = new javax.swing.JTextField();
        positiontf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        coursecb = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        yearcb = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        gendercb = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        remarksta = new javax.swing.JTextArea();
        extensiontf1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DASHBOARD GRATEFULNESS");
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1350, 770));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DASHBOARD", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Stencil", 0, 36))); // NOI18N
        jPanel1.setMinimumSize(new java.awt.Dimension(1338, 758));
        jPanel1.setPreferredSize(new java.awt.Dimension(1338, 785));
        jPanel1.setVerifyInputWhenFocusTarget(false);
        jPanel1.setLayout(null);
        jPanel1.add(jSeparator2);
        jSeparator2.setBounds(10, 50, 1320, 20);

        jTabbedPane1.setBackground(new java.awt.Color(0, 204, 51));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTabbedPane1.setInheritsPopupMenu(true);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel3.setLayout(null);
        jPanel3.add(jSeparator6);
        jSeparator6.setBounds(8, 62, 1556, 10);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("SEARCH FOR :");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(20, 10, 98, 37);

        searcforcb.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        searcforcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GROUP ID", "NAME", "COURSE/GRADE", "GENDER", "ADDRESS", "POSITION", "REMARKS" }));
        jPanel3.add(searcforcb);
        searcforcb.setBounds(125, 13, 139, 37);

        refreshtbt.setBackground(new java.awt.Color(255, 204, 51));
        refreshtbt.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        refreshtbt.setText("refresh table");
        refreshtbt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        refreshtbt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        refreshtbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshtbtActionPerformed(evt);
            }
        });
        jPanel3.add(refreshtbt);
        refreshtbt.setBounds(650, 70, 120, 30);
        jPanel3.add(searchfortf);
        searchfortf.setBounds(270, 12, 199, 38);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PROFILE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jPanel8.setLayout(null);

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel21.setText("GROUP ID :");
        jPanel8.add(jLabel21);
        jLabel21.setBounds(100, 100, 110, 36);

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel22.setText("NAME :");
        jPanel8.add(jLabel22);
        jLabel22.setBounds(20, 200, 110, 36);

        jLabel28.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel28.setText("GENDER : ");
        jPanel8.add(jLabel28);
        jLabel28.setBounds(10, 350, 110, 36);

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel26.setText("COURSE :");
        jPanel8.add(jLabel26);
        jLabel26.setBounds(10, 300, 110, 36);

        jPanel9.setLayout(null);
        jPanel8.add(jPanel9);
        jPanel9.setBounds(300, 140, 0, 0);

        showremarkstb.setColumns(20);
        showremarkstb.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        showremarkstb.setRows(5);
        showremarkstb.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "REMARKS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        showremarkstb.setEnabled(false);
        jScrollPane4.setViewportView(showremarkstb);

        jPanel8.add(jScrollPane4);
        jScrollPane4.setBounds(20, 400, 320, 120);

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel24.setText("ADDRESS :");
        jPanel8.add(jLabel24);
        jLabel24.setBounds(10, 240, 120, 50);

        jPanel10.setBackground(new java.awt.Color(153, 255, 153));

        jPanel7.setLayout(null);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.add(jPanel10);
        jPanel10.setBounds(310, 20, 161, 170);

        jLabel31.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel31.setText("GROUP ");
        jPanel8.add(jLabel31);
        jLabel31.setBounds(30, 30, 70, 36);

        showpositionlb.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        showpositionlb.setText("MEMBER");
        jPanel8.add(showpositionlb);
        showpositionlb.setBounds(100, 30, 220, 36);

        showaddresstf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        showaddresstf.setEnabled(false);
        jPanel8.add(showaddresstf);
        showaddresstf.setBounds(90, 250, 390, 30);

        shownametf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        shownametf.setEnabled(false);
        jPanel8.add(shownametf);
        shownametf.setBounds(90, 200, 390, 30);

        showcoursetf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        showcoursetf.setEnabled(false);
        jPanel8.add(showcoursetf);
        showcoursetf.setBounds(90, 300, 210, 30);

        showidtf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        showidtf.setForeground(new java.awt.Color(204, 51, 0));
        showidtf.setEnabled(false);
        jPanel8.add(showidtf);
        showidtf.setBounds(200, 100, 100, 30);

        showgendertf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        showgendertf.setEnabled(false);
        jPanel8.add(showgendertf);
        showgendertf.setBounds(90, 350, 160, 30);

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton4.setText("DELETE");
        jButton4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel8.add(jButton4);
        jButton4.setBounds(360, 470, 110, 30);

        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton5.setText("EDIT");
        jButton5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton5);
        jButton5.setBounds(360, 430, 110, 30);

        jPanel3.add(jPanel8);
        jPanel8.setBounds(790, 80, 490, 530);

        jTable1.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "Title 2", "Title 3", "Title 4", "title5", "null", "null", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(51, 51, 255));
        jTable1.setIntercellSpacing(new java.awt.Dimension(1, 1));
        jTable1.setRowHeight(30);
        jTable1.setSelectionBackground(new java.awt.Color(0, 204, 0));
        jTable1.setShowGrid(true);
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
        }

        jPanel3.add(jScrollPane3);
        jScrollPane3.setBounds(10, 100, 770, 510);

        showmembersamountlb.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        showmembersamountlb.setForeground(new java.awt.Color(255, 51, 51));
        showmembersamountlb.setText("NO MEMBERS FOUND");
        jPanel3.add(showmembersamountlb);
        showmembersamountlb.setBounds(20, 70, 230, 30);

        searchbt1.setBackground(new java.awt.Color(0, 204, 0));
        searchbt1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        searchbt1.setText("SEARCH");
        searchbt1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchbt1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchbt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbt1ActionPerformed(evt);
            }
        });
        jPanel3.add(searchbt1);
        searchbt1.setBounds(475, 12, 86, 38);

        jTabbedPane1.addTab("SEARCH MEMBERS", jPanel3);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        jPanel2.setPreferredSize(new java.awt.Dimension(1310, 738));
        jPanel2.setLayout(null);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(jSeparator3);
        jSeparator3.setBounds(410, 490, 880, 10);

        cancelbutton.setBackground(new java.awt.Color(255, 153, 102));
        cancelbutton.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        cancelbutton.setText("CANCEL");
        cancelbutton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cancelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbuttonActionPerformed(evt);
            }
        });
        jPanel2.add(cancelbutton);
        cancelbutton.setBounds(1080, 510, 150, 40);

        addbutton.setBackground(new java.awt.Color(0, 204, 51));
        addbutton.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addbutton.setText("ADD");
        addbutton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        addbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbuttonActionPerformed(evt);
            }
        });
        jPanel2.add(addbutton);
        addbutton.setBounds(920, 510, 140, 40);

        provincetf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        provincetf.setForeground(new java.awt.Color(102, 102, 102));
        provincetf.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PROVINCE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N
        provincetf.setMinimumSize(new java.awt.Dimension(64, 42));
        provincetf.setPreferredSize(new java.awt.Dimension(64, 42));
        jPanel2.add(provincetf);
        provincetf.setBounds(550, 180, 180, 50);

        barangaytf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        barangaytf.setForeground(new java.awt.Color(102, 102, 102));
        barangaytf.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "BARANGAY", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N
        barangaytf.setMinimumSize(new java.awt.Dimension(64, 42));
        barangaytf.setPreferredSize(new java.awt.Dimension(64, 42));
        jPanel2.add(barangaytf);
        barangaytf.setBounds(140, 180, 180, 50);

        municipalitytf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        municipalitytf.setForeground(new java.awt.Color(102, 102, 102));
        municipalitytf.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MUNICIPALITY", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N
        municipalitytf.setMinimumSize(new java.awt.Dimension(64, 42));
        municipalitytf.setPreferredSize(new java.awt.Dimension(64, 42));
        jPanel2.add(municipalitytf);
        municipalitytf.setBounds(340, 180, 180, 50);

        idtf.setEditable(false);
        idtf.setBackground(new java.awt.Color(255, 255, 255));
        idtf.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        idtf.setForeground(new java.awt.Color(255, 51, 51));
        idtf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idtf.setText("GR000");
        idtf.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GROUP ID ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N
        idtf.setMargin(new java.awt.Insets(6, 6, 2, 6));
        jPanel2.add(idtf);
        idtf.setBounds(50, 50, 120, 60);

        lastnametf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lastnametf.setForeground(new java.awt.Color(102, 102, 102));
        lastnametf.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LAST NAME", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N
        lastnametf.setMinimumSize(new java.awt.Dimension(64, 42));
        lastnametf.setPreferredSize(new java.awt.Dimension(64, 42));
        jPanel2.add(lastnametf);
        lastnametf.setBounds(140, 110, 220, 50);

        firstnametf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        firstnametf.setForeground(new java.awt.Color(102, 102, 102));
        firstnametf.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "FIRST NAME", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N
        firstnametf.setMinimumSize(new java.awt.Dimension(64, 42));
        firstnametf.setPreferredSize(new java.awt.Dimension(64, 42));
        jPanel2.add(firstnametf);
        firstnametf.setBounds(380, 110, 190, 50);

        middlenametf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        middlenametf.setForeground(new java.awt.Color(102, 102, 102));
        middlenametf.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MIDDLE NAME", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N
        middlenametf.setMinimumSize(new java.awt.Dimension(64, 42));
        middlenametf.setPreferredSize(new java.awt.Dimension(64, 42));
        jPanel2.add(middlenametf);
        middlenametf.setBounds(590, 110, 190, 50);

        positiontf.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        positiontf.setForeground(new java.awt.Color(102, 102, 102));
        positiontf.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GROUP POSITION", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N
        positiontf.setMinimumSize(new java.awt.Dimension(64, 42));
        positiontf.setPreferredSize(new java.awt.Dimension(64, 42));
        positiontf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                positiontfActionPerformed(evt);
            }
        });
        jPanel2.add(positiontf);
        positiontf.setBounds(980, 110, 250, 50);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("NAME :");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(40, 120, 100, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("COURSE :");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(360, 310, 90, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("OTHER INFORMATION : ");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(40, 260, 200, 30);

        coursecb.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        coursecb.setForeground(new java.awt.Color(204, 204, 204));
        coursecb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GRADE LEVEL", "NURSERY", "KINDERGARTEN", "BSIT", "BSBA", "BS-CRIM", "BSED", "BSMA", "BSE" }));
        coursecb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coursecbActionPerformed(evt);
            }
        });
        jPanel2.add(coursecb);
        coursecb.setBounds(460, 310, 160, 40);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("ADDRESS :");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(30, 190, 100, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("LEVEL");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(630, 310, 90, 30);

        yearcb.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        yearcb.setForeground(new java.awt.Color(204, 204, 204));
        yearcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "I", "II", "III", "IV" }));
        jPanel2.add(yearcb);
        yearcb.setBounds(720, 310, 60, 40);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("GENDER :");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(70, 310, 90, 30);

        gendercb.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        gendercb.setForeground(new java.awt.Color(204, 204, 204));
        gendercb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MALE", "FEMALE" }));
        gendercb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gendercbActionPerformed(evt);
            }
        });
        jPanel2.add(gendercb);
        gendercb.setBounds(160, 310, 160, 40);

        remarksta.setColumns(20);
        remarksta.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        remarksta.setRows(5);
        remarksta.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "REMARKS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N
        jScrollPane1.setViewportView(remarksta);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 400, 360, 210);

        extensiontf1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        extensiontf1.setForeground(new java.awt.Color(102, 102, 102));
        extensiontf1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "EXTENSION", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N
        extensiontf1.setMinimumSize(new java.awt.Dimension(64, 42));
        extensiontf1.setPreferredSize(new java.awt.Dimension(64, 42));
        jPanel2.add(extensiontf1);
        extensiontf1.setBounds(800, 110, 120, 50);

        jTabbedPane1.addTab("ADD MEMBERS", jPanel2);

        jPanel1.add(jTabbedPane1);
        jTabbedPane1.setBounds(30, 70, 1300, 650);
        jTabbedPane1.getAccessibleContext().setAccessibleName("ADD MEMBERS\n");
        jTabbedPane1.getAccessibleContext().setAccessibleDescription("ADD MEMBERS");

        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(10, 740, 1320, 20);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Stencil", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("@YLP 12-01-2023@");
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(610, 750, 120, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void coursecbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coursecbActionPerformed
        // TODO add your handling code here:
        if(coursecb.getSelectedItem().toString().equals("GRADE LEVEL")){
        yearcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"}));
        yearcb.setVisible(true);
        jLabel7.setVisible(true);
        }
        else if(coursecb.getSelectedItem().toString().equals("KINDERGARTEN")||coursecb.getSelectedItem().toString().equals("NURSERY")){
        yearcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {""}));
        yearcb.setVisible(false);
        jLabel7.setVisible(false);
        }
        else{
        yearcb.setVisible(true);
        jLabel7.setVisible(true);
        yearcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "I", "II", "III", "IV" }));
        
        }
    }//GEN-LAST:event_coursecbActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void addbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbuttonActionPerformed
        // TODO add your handling code here:
                   
        try { 
            con = DriverManager.getConnection("jdbc:mysql://localhost/gratefulness_members_db","root",""); 
            Statement st = con.createStatement();
            
            
            String gr_id =idtf.getText();
            String name=(lastnametf.getText()+" "+extensiontf1.getText()+" "+firstnametf.getText()+" "+middlenametf.getText()).toUpperCase();
            String grposition= (positiontf.getText()).toUpperCase();
            String address=(barangaytf.getText()+" "+municipalitytf.getText()+" "+provincetf.getText()).toUpperCase();
            String gender= gendercb.getSelectedItem().toString();
            String course= coursecb.getSelectedItem().toString()+" "+yearcb.getSelectedItem().toString();
            String remarks=(remarksta.getText()).toUpperCase();
            String location="PHOTOS"+"\\\\member.jpg";
         
            
            st.executeUpdate("INSERT INTO `members_table`(`gr_id1`, `name`, `address`, `course`, `gender`, `position`, `remarks`, `picture_locaton`) VALUES ('"+gr_id+"','"+name+"','"+address+"','"+course+"','"+gender+"','"+grposition+"','"+remarks+"','"+location+"')");
        
            lastnametf.setText("");
            extensiontf1.setText("");
            firstnametf.setText("");
            middlenametf.setText("");
            positiontf.setText("");
            barangaytf.setText("");
            municipalitytf.setText("");
            provincetf.setText("");
            remarksta.setText("");
            
            getLastNumber();
        } catch (SQLException ex) {
            Logger.getLogger(DASHBOARD_GRATEFULLNESS.class.getName()).log(Level.SEVERE, null, ex);
        }
            
           
      
        
    }//GEN-LAST:event_addbuttonActionPerformed

    public void Show_Members_In_JTable(){
       ArrayList<Members> list = getMembersList();
       DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
       Object[] row = new Object[8];
       
       for(int i = 0; i < list.size(); i++)
       {
           row[0] = list.get(i).getId();
           row[1] = list.get(i).getName();
           row[2] = list.get(i).getAddress();
           row[3] = list.get(i).getCourse();
           row[4] = list.get(i).getGender();
           row[5] = list.get(i).getPosition();
           row[6] = list.get(i). getRemarks();
           row[7] = list.get(i).getPicturelocation();
      
           
           model.addRow(row);
       }
        refreshTable();
        showmembersamountlb.setText(CountMembers()+" MEMBERS FOUND.");
    }
    
    public int CountMembers(String attribute,String columnname,ResultSet rs){
         int count=0;
         Statement st;
         
         try {
           con = DriverManager.getConnection("jdbc:mysql://localhost/gratefulness_members_db","root","");
           String query="SELECT * FROM `members_table` WHERE `"+columnname+"` LIKE '"+attribute+"%"+"'";
           
           st = con.createStatement();
           rs = st.executeQuery(query);
          
           
           while(rs.next())
           {  
               count++;
           }
          
       } catch (SQLException e) {
       }
         return count;
    }
    
    
    public int CountMembers(){
         int count=0;
         Statement st;
         ResultSet rs;
         try {
           con = DriverManager.getConnection("jdbc:mysql://localhost/gratefulness_members_db","root","");
           String query= "SELECT * FROM members_table";
           st = con.createStatement();
           rs = st.executeQuery(query);
          
           
           while(rs.next())
           {  
               count++;
           }
          
       } catch (SQLException e) {
       }
         return count;
    }
    
    
    public ArrayList<Members> getMembersList(){
      
       ArrayList<Members> membersList = new ArrayList<>();
       
       Statement st;
       ResultSet rs;
       
       try {
           con = DriverManager.getConnection("jdbc:mysql://localhost/gratefulness_members_db","root","");
           String query= "SELECT * FROM members_table";
           st = con.createStatement();
           rs = st.executeQuery(query);
           Members members;
           
           while(rs.next())
           {
               members = new Members(rs.getString("gr_id1"),rs.getString("name"),rs.getString("address"),rs.getString("course"),rs.getString("gender"),rs.getString("position"),rs.getString("remarks"),rs.getString("picture_location"));
               membersList.add(members);
               
           }
           
       } catch (SQLException e) {
       }
       return membersList;
   }
     
    
      public void refreshTable(){
         
        try{
            
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/gratefulness_members_db","root",""); 
       
            String query1= "SELECT * FROM `members_table` ORDER BY `members_table`.`gr_id1` ASC";
            PreparedStatement pst1 = conn.prepareStatement(query1);
            ResultSet rs1=pst1.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs1));
           
            showmembersamountlb.setText(CountMembers()+" MEMBERS FOUND");
            pst1.close();
            rs1.close();
        } catch(Exception e){
            e.printStackTrace();
        }
    }
    
    
    public void getLastNumber(){
        String sql="SELECT max(gr_id1)from members_table";
        try { 
            //con = DriverManager.getConnection("jdbc:mysql://localhost/gratefulness_members_db","root","");
             Statement st = con.createStatement();
             
             ResultSet result=st.executeQuery(sql);
             String getid;
             if(result.next()){
                    getid=result.getString(1);
                    int idnum= Integer.parseInt(getid.substring(2,getid.length()));
                    idnum++;
                    idtf.setText("GR00"+idnum);
                 
             }
             else{
                 
               
             }
        } catch (SQLException ex) {
            Logger.getLogger(DASHBOARD_GRATEFULLNESS.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }
    
     
    public void getConnection(){
       
       try {
           Class.forName("com.mysql.jdbc.Driver");
           
           con = DriverManager.getConnection("jdbc:mysql://localhost/gratefulness_members_db", "root","");
             JOptionPane.showMessageDialog(null, "YOU ARE CONNECTED 😍😍");
             
          
       } catch (Exception e) {
           e.printStackTrace();
           JOptionPane.showMessageDialog(null, "ERROR:\nDatabase not connected.\nPlease start XAMPP.");
          
       }
   }
    
    
    
    
    
    
    private void gendercbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gendercbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gendercbActionPerformed

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
        // TODO add your handling code here:     
    }//GEN-LAST:event_jTable1FocusGained

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
        TableModel model=jTable1.getModel();
        
            showidtf.setText(model.getValueAt(i,0).toString());
            shownametf.setText(model.getValueAt(i,1).toString());
            showaddresstf.setText(model.getValueAt(i,2).toString());
            showcoursetf.setText(model.getValueAt(i,3).toString());
            showgendertf.setText(model.getValueAt(i,4).toString());
            showpositionlb.setText(model.getValueAt(i,5).toString());
            showremarkstb.setText(model.getValueAt(i,6).toString());
           
    }//GEN-LAST:event_jTable1MouseClicked

    private void refreshtbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshtbtActionPerformed
        // TODO add your handling code here:
        refreshTable();
    }//GEN-LAST:event_refreshtbtActionPerformed

    private void positiontfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_positiontfActionPerformed
       
    }//GEN-LAST:event_positiontfActionPerformed

    private void cancelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbuttonActionPerformed
        // TODO add your handling code here:
        lastnametf.setText("");
            extensiontf1.setText("");
            firstnametf.setText("");
            middlenametf.setText("");
            positiontf.setText("");
            barangaytf.setText("");
            municipalitytf.setText("");
            provincetf.setText("");
            remarksta.setText("");
    }//GEN-LAST:event_cancelbuttonActionPerformed

    private void searchbt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbt1ActionPerformed
        // TODO add your handling code here:
            int count=0;
            Statement st;
            Statement st1;
            ResultSet rs1,rs2;
  
        try {
         
            if(searcforcb.getSelectedItem().toString().equals("GROUP ID")){
                String query="SELECT * FROM `members_table` WHERE `gr_id1` LIKE '"+searchfortf.getText()+"%"+"'";
                st = con.createStatement();
                st1 = con.createStatement();
                rs1 = st.executeQuery(query);
                rs2 = st1.executeQuery(query);
                while(rs1.next())
                {  
                    count++;
                }
                showmembersamountlb.setText(count+" MEMBERS FOUND");
                
                jTable1.setModel(DbUtils.resultSetToTableModel(rs2));
            }else if(searcforcb.getSelectedItem().toString().equals("NAME")){
                String query="SELECT * FROM `members_table` WHERE `name` LIKE '"+searchfortf.getText()+"%"+"'";
                st = con.createStatement();
                st1 = con.createStatement();
                rs1 = st.executeQuery(query);
                rs2 = st1.executeQuery(query);
                while(rs1.next())
                {  
                    count++;
                }
                showmembersamountlb.setText(count+" MEMBERS FOUND");
                
                jTable1.setModel(DbUtils.resultSetToTableModel(rs2));
            }else if(searcforcb.getSelectedItem().toString().equals("COURSE/GRADE")){
                String query="SELECT * FROM `members_table` WHERE `course` LIKE '"+searchfortf.getText()+"%"+"'";
                st = con.createStatement();
                st1 = con.createStatement();
                rs1 = st.executeQuery(query);
                rs2 = st1.executeQuery(query);
                while(rs1.next())
                {  
                    count++;
                }
                showmembersamountlb.setText(count+" MEMBERS FOUND");
                
                jTable1.setModel(DbUtils.resultSetToTableModel(rs2));
            }else if(searcforcb.getSelectedItem().toString().equals("GENDER")){
                String query="SELECT * FROM `members_table` WHERE `gender` LIKE '"+searchfortf.getText()+"%"+"'";
                st = con.createStatement();
                st1 = con.createStatement();
                rs1 = st.executeQuery(query);
                rs2 = st1.executeQuery(query);
                while(rs1.next())
                {  
                    count++;
                }
                showmembersamountlb.setText(count+" MEMBERS FOUND");
                
                jTable1.setModel(DbUtils.resultSetToTableModel(rs2));
            }else if(searcforcb.getSelectedItem().toString().equals("ADDRESS")){
                String query="SELECT * FROM `members_table` WHERE `address` LIKE '"+searchfortf.getText()+"%"+"'";
                st = con.createStatement();
                st1 = con.createStatement();
                rs1 = st.executeQuery(query);
                rs2 = st1.executeQuery(query);
                while(rs1.next())
                {  
                    count++;
                }
                showmembersamountlb.setText(count+" MEMBERS FOUND");
                
                jTable1.setModel(DbUtils.resultSetToTableModel(rs2));
            }else if(searcforcb.getSelectedItem().toString().equals("POSITION")){
                String query="SELECT * FROM `members_table` WHERE `position` LIKE '"+searchfortf.getText()+"%"+"'";
                st = con.createStatement();
                st1 = con.createStatement();
                rs1 = st.executeQuery(query);
                rs2 = st1.executeQuery(query);
                while(rs1.next())
                {  
                    count++;
                }
                showmembersamountlb.setText(count+" MEMBERS FOUND");
                
                jTable1.setModel(DbUtils.resultSetToTableModel(rs2));
            }else if(searcforcb.getSelectedItem().toString().equals("REMARKS")){
                String query="SELECT * FROM `members_table` WHERE `remarks` LIKE '"+searchfortf.getText()+"%"+"'";
                st = con.createStatement();
                st1 = con.createStatement();
                rs1 = st.executeQuery(query);
                rs2 = st1.executeQuery(query);
                while(rs1.next())
                {  
                    count++;
                }
                showmembersamountlb.setText(count+" MEMBERS FOUND");
                
                jTable1.setModel(DbUtils.resultSetToTableModel(rs2));
            }
      
            
            searchfortf.setText("");
           
        } catch (SQLException ex) {
            Logger.getLogger(DASHBOARD_GRATEFULLNESS.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_searchbt1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DASHBOARD_GRATEFULLNESS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DASHBOARD_GRATEFULLNESS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DASHBOARD_GRATEFULLNESS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DASHBOARD_GRATEFULLNESS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               new GRATEFULNESS_DASHBOARD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbutton;
    private javax.swing.JTextField barangaytf;
    private javax.swing.JButton cancelbutton;
    private javax.swing.JComboBox<String> coursecb;
    private javax.swing.JTextField extensiontf1;
    private javax.swing.JTextField firstnametf;
    private javax.swing.JComboBox<String> gendercb;
    private javax.swing.JTextField idtf;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lastnametf;
    private javax.swing.JTextField middlenametf;
    private javax.swing.JTextField municipalitytf;
    private javax.swing.JTextField positiontf;
    private javax.swing.JTextField provincetf;
    private javax.swing.JButton refreshtbt;
    private javax.swing.JTextArea remarksta;
    private javax.swing.JComboBox<String> searcforcb;
    private javax.swing.JButton searchbt1;
    private javax.swing.JTextField searchfortf;
    private javax.swing.JTextField showaddresstf;
    private javax.swing.JTextField showcoursetf;
    private javax.swing.JTextField showgendertf;
    private javax.swing.JTextField showidtf;
    private javax.swing.JLabel showmembersamountlb;
    private javax.swing.JTextField shownametf;
    private javax.swing.JLabel showpositionlb;
    private javax.swing.JTextArea showremarkstb;
    private javax.swing.JComboBox<String> yearcb;
    // End of variables declaration//GEN-END:variables
    long idnum;
    Connection con;
    
}
